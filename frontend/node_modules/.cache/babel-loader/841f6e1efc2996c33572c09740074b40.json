{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport axios from 'axios';\nvar request = axios.create({\n  // in local machine, use:\n  // baseURL: 'http://localhost:9191/',\n  // in replit, use:\n  baseURL: 'https://springbootvuems-1.myron0220.repl.co',\n  timeout: 5000\n});\nrequest.interceptors.request.use(function (config) {\n  config.headers['Content-Type'] = 'application/json;charset=utf-8'; // config.headers['token'] = user.token;  // set request header\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n});\nrequest.interceptors.response.use(function (response) {\n  var res = response.data; // if returned a file type\n\n  if (response.config.responseType === 'blob') {\n    return res;\n  } // otherwise, return json\n\n\n  if (typeof res === 'string') {\n    res = res ? JSON.parse(res) : res;\n  }\n\n  return res;\n}, function (error) {\n  console.log('err' + error); // for debug\n\n  return Promise.reject(error);\n});\nexport default request;","map":{"version":3,"sources":["/Users/kidsama/Documents/Full_Stack/SpringbootVueMS/frontend/src/utils/request.js"],"names":["axios","request","create","baseURL","timeout","interceptors","use","config","headers","error","Promise","reject","response","res","data","responseType","JSON","parse","console","log"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAGD,KAAK,CAACE,MAAN,CAAa;AACzB;AACA;AACA;AACAC,EAAAA,OAAO,EAAE,6CAJgB;AAKzBC,EAAAA,OAAO,EAAE;AALgB,CAAb,CAAhB;AAQAH,OAAO,CAACI,YAAR,CAAqBJ,OAArB,CAA6BK,GAA7B,CAAiC,UAAAC,MAAM,EAAI;AACvCA,EAAAA,MAAM,CAACC,OAAP,CAAe,cAAf,IAAiC,gCAAjC,CADuC,CAGvC;;AACA,SAAOD,MAAP;AACH,CALD,EAKG,UAAAE,KAAK,EAAI;AACR,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAPD;AASAR,OAAO,CAACI,YAAR,CAAqBO,QAArB,CAA8BN,GAA9B,CACI,UAAAM,QAAQ,EAAI;AACR,MAAIC,GAAG,GAAGD,QAAQ,CAACE,IAAnB,CADQ,CAER;;AACA,MAAIF,QAAQ,CAACL,MAAT,CAAgBQ,YAAhB,KAAiC,MAArC,EAA6C;AACzC,WAAOF,GAAP;AACH,GALO,CAMR;;;AACA,MAAI,OAAOA,GAAP,KAAe,QAAnB,EAA6B;AACzBA,IAAAA,GAAG,GAAGA,GAAG,GAAGG,IAAI,CAACC,KAAL,CAAWJ,GAAX,CAAH,GAAqBA,GAA9B;AACH;;AACD,SAAOA,GAAP;AACH,CAZL,EAaI,UAAAJ,KAAK,EAAI;AACLS,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAQV,KAApB,EADK,CACsB;;AAC3B,SAAOC,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACH,CAhBL;AAoBA,eAAeR,OAAf","sourcesContent":["import axios from 'axios'\n\nconst request = axios.create({\n    // in local machine, use:\n    // baseURL: 'http://localhost:9191/',\n    // in replit, use:\n    baseURL: 'https://springbootvuems-1.myron0220.repl.co',\n    timeout: 5000\n})\n\nrequest.interceptors.request.use(config => {\n    config.headers['Content-Type'] = 'application/json;charset=utf-8';\n\n    // config.headers['token'] = user.token;  // set request header\n    return config\n}, error => {\n    return Promise.reject(error)\n});\n\nrequest.interceptors.response.use(\n    response => {\n        let res = response.data;\n        // if returned a file type\n        if (response.config.responseType === 'blob') {\n            return res\n        }\n        // otherwise, return json\n        if (typeof res === 'string') {\n            res = res ? JSON.parse(res) : res\n        }\n        return res;\n    },\n    error => {\n        console.log('err' + error) // for debug\n        return Promise.reject(error)\n    }\n)\n\n\nexport default request\n\n"]},"metadata":{},"sourceType":"module"}