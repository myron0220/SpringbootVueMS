{"ast":null,"code":"require(\"core-js/modules/es.object.to-string.js\");\n\nrequire(\"core-js/modules/es.regexp.exec.js\");\n\nrequire(\"core-js/modules/es.regexp.test.js\");\n\nrequire(\"core-js/modules/es.array.concat.js\");\n\nvar nestRE = /^(attrs|props|on|nativeOn|class|style|hook)$/;\n\nmodule.exports = function mergeJSXProps(objs) {\n  return objs.reduce(function (a, b) {\n    var aa, bb, key, nestedKey, temp;\n\n    for (key in b) {\n      aa = a[key];\n      bb = b[key];\n\n      if (aa && nestRE.test(key)) {\n        // normalize class\n        if (key === 'class') {\n          if (typeof aa === 'string') {\n            temp = aa;\n            a[key] = aa = {};\n            aa[temp] = true;\n          }\n\n          if (typeof bb === 'string') {\n            temp = bb;\n            b[key] = bb = {};\n            bb[temp] = true;\n          }\n        }\n\n        if (key === 'on' || key === 'nativeOn' || key === 'hook') {\n          // merge functions\n          for (nestedKey in bb) {\n            aa[nestedKey] = mergeFn(aa[nestedKey], bb[nestedKey]);\n          }\n        } else if (Array.isArray(aa)) {\n          a[key] = aa.concat(bb);\n        } else if (Array.isArray(bb)) {\n          a[key] = [aa].concat(bb);\n        } else {\n          for (nestedKey in bb) {\n            aa[nestedKey] = bb[nestedKey];\n          }\n        }\n      } else {\n        a[key] = b[key];\n      }\n    }\n\n    return a;\n  }, {});\n};\n\nfunction mergeFn(a, b) {\n  return function () {\n    a && a.apply(this, arguments);\n    b && b.apply(this, arguments);\n  };\n}","map":{"version":3,"sources":["/Users/kidsama/Documents/Full_Stack/SpringbootVueMS/frontend/node_modules/babel-helper-vue-jsx-merge-props/index.js"],"names":["nestRE","module","exports","mergeJSXProps","objs","reduce","a","b","aa","bb","key","nestedKey","temp","test","mergeFn","Array","isArray","concat","apply","arguments"],"mappings":";;;;;;;;AAAA,IAAIA,MAAM,GAAG,8CAAb;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,aAAT,CAAwBC,IAAxB,EAA8B;AAC7C,SAAOA,IAAI,CAACC,MAAL,CAAY,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACjC,QAAIC,EAAJ,EAAQC,EAAR,EAAYC,GAAZ,EAAiBC,SAAjB,EAA4BC,IAA5B;;AACA,SAAKF,GAAL,IAAYH,CAAZ,EAAe;AACbC,MAAAA,EAAE,GAAGF,CAAC,CAACI,GAAD,CAAN;AACAD,MAAAA,EAAE,GAAGF,CAAC,CAACG,GAAD,CAAN;;AACA,UAAIF,EAAE,IAAIR,MAAM,CAACa,IAAP,CAAYH,GAAZ,CAAV,EAA4B;AAC1B;AACA,YAAIA,GAAG,KAAK,OAAZ,EAAqB;AACnB,cAAI,OAAOF,EAAP,KAAc,QAAlB,EAA4B;AAC1BI,YAAAA,IAAI,GAAGJ,EAAP;AACAF,YAAAA,CAAC,CAACI,GAAD,CAAD,GAASF,EAAE,GAAG,EAAd;AACAA,YAAAA,EAAE,CAACI,IAAD,CAAF,GAAW,IAAX;AACD;;AACD,cAAI,OAAOH,EAAP,KAAc,QAAlB,EAA4B;AAC1BG,YAAAA,IAAI,GAAGH,EAAP;AACAF,YAAAA,CAAC,CAACG,GAAD,CAAD,GAASD,EAAE,GAAG,EAAd;AACAA,YAAAA,EAAE,CAACG,IAAD,CAAF,GAAW,IAAX;AACD;AACF;;AACD,YAAIF,GAAG,KAAK,IAAR,IAAgBA,GAAG,KAAK,UAAxB,IAAsCA,GAAG,KAAK,MAAlD,EAA0D;AACxD;AACA,eAAKC,SAAL,IAAkBF,EAAlB,EAAsB;AACpBD,YAAAA,EAAE,CAACG,SAAD,CAAF,GAAgBG,OAAO,CAACN,EAAE,CAACG,SAAD,CAAH,EAAgBF,EAAE,CAACE,SAAD,CAAlB,CAAvB;AACD;AACF,SALD,MAKO,IAAII,KAAK,CAACC,OAAN,CAAcR,EAAd,CAAJ,EAAuB;AAC5BF,UAAAA,CAAC,CAACI,GAAD,CAAD,GAASF,EAAE,CAACS,MAAH,CAAUR,EAAV,CAAT;AACD,SAFM,MAEA,IAAIM,KAAK,CAACC,OAAN,CAAcP,EAAd,CAAJ,EAAuB;AAC5BH,UAAAA,CAAC,CAACI,GAAD,CAAD,GAAS,CAACF,EAAD,EAAKS,MAAL,CAAYR,EAAZ,CAAT;AACD,SAFM,MAEA;AACL,eAAKE,SAAL,IAAkBF,EAAlB,EAAsB;AACpBD,YAAAA,EAAE,CAACG,SAAD,CAAF,GAAgBF,EAAE,CAACE,SAAD,CAAlB;AACD;AACF;AACF,OA5BD,MA4BO;AACLL,QAAAA,CAAC,CAACI,GAAD,CAAD,GAASH,CAAC,CAACG,GAAD,CAAV;AACD;AACF;;AACD,WAAOJ,CAAP;AACD,GAtCM,EAsCJ,EAtCI,CAAP;AAuCD,CAxCD;;AA0CA,SAASQ,OAAT,CAAkBR,CAAlB,EAAqBC,CAArB,EAAwB;AACtB,SAAO,YAAY;AACjBD,IAAAA,CAAC,IAAIA,CAAC,CAACY,KAAF,CAAQ,IAAR,EAAcC,SAAd,CAAL;AACAZ,IAAAA,CAAC,IAAIA,CAAC,CAACW,KAAF,CAAQ,IAAR,EAAcC,SAAd,CAAL;AACD,GAHD;AAID","sourcesContent":["var nestRE = /^(attrs|props|on|nativeOn|class|style|hook)$/\n\nmodule.exports = function mergeJSXProps (objs) {\n  return objs.reduce(function (a, b) {\n    var aa, bb, key, nestedKey, temp\n    for (key in b) {\n      aa = a[key]\n      bb = b[key]\n      if (aa && nestRE.test(key)) {\n        // normalize class\n        if (key === 'class') {\n          if (typeof aa === 'string') {\n            temp = aa\n            a[key] = aa = {}\n            aa[temp] = true\n          }\n          if (typeof bb === 'string') {\n            temp = bb\n            b[key] = bb = {}\n            bb[temp] = true\n          }\n        }\n        if (key === 'on' || key === 'nativeOn' || key === 'hook') {\n          // merge functions\n          for (nestedKey in bb) {\n            aa[nestedKey] = mergeFn(aa[nestedKey], bb[nestedKey])\n          }\n        } else if (Array.isArray(aa)) {\n          a[key] = aa.concat(bb)\n        } else if (Array.isArray(bb)) {\n          a[key] = [aa].concat(bb)\n        } else {\n          for (nestedKey in bb) {\n            aa[nestedKey] = bb[nestedKey]\n          }\n        }\n      } else {\n        a[key] = b[key]\n      }\n    }\n    return a\n  }, {})\n}\n\nfunction mergeFn (a, b) {\n  return function () {\n    a && a.apply(this, arguments)\n    b && b.apply(this, arguments)\n  }\n}\n"]},"metadata":{},"sourceType":"script"}