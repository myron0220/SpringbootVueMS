{"ast":null,"code":"/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles(parentId, list) {\n  var styles = [];\n  var newStyles = {};\n\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i];\n    var id = item[0];\n    var css = item[1];\n    var media = item[2];\n    var sourceMap = item[3];\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    };\n\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = {\n        id: id,\n        parts: [part]\n      });\n    } else {\n      newStyles[id].parts.push(part);\n    }\n  }\n\n  return styles;\n}","map":{"version":3,"sources":["/Users/kidsama/Documents/Full_Stack/SpringbootVueMS/frontend/node_modules/vue-style-loader/lib/listToStyles.js"],"names":["listToStyles","parentId","list","styles","newStyles","i","length","item","id","css","media","sourceMap","part","push","parts"],"mappings":"AAAA;AACA;AACA;AACA;AACA,eAAe,SAASA,YAAT,CAAuBC,QAAvB,EAAiCC,IAAjC,EAAuC;AACpD,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,SAAS,GAAG,EAAhB;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,QAAIE,IAAI,GAAGL,IAAI,CAACG,CAAD,CAAf;AACA,QAAIG,EAAE,GAAGD,IAAI,CAAC,CAAD,CAAb;AACA,QAAIE,GAAG,GAAGF,IAAI,CAAC,CAAD,CAAd;AACA,QAAIG,KAAK,GAAGH,IAAI,CAAC,CAAD,CAAhB;AACA,QAAII,SAAS,GAAGJ,IAAI,CAAC,CAAD,CAApB;AACA,QAAIK,IAAI,GAAG;AACTJ,MAAAA,EAAE,EAAEP,QAAQ,GAAG,GAAX,GAAiBI,CADZ;AAETI,MAAAA,GAAG,EAAEA,GAFI;AAGTC,MAAAA,KAAK,EAAEA,KAHE;AAITC,MAAAA,SAAS,EAAEA;AAJF,KAAX;;AAMA,QAAI,CAACP,SAAS,CAACI,EAAD,CAAd,EAAoB;AAClBL,MAAAA,MAAM,CAACU,IAAP,CAAYT,SAAS,CAACI,EAAD,CAAT,GAAgB;AAAEA,QAAAA,EAAE,EAAEA,EAAN;AAAUM,QAAAA,KAAK,EAAE,CAACF,IAAD;AAAjB,OAA5B;AACD,KAFD,MAEO;AACLR,MAAAA,SAAS,CAACI,EAAD,CAAT,CAAcM,KAAd,CAAoBD,IAApB,CAAyBD,IAAzB;AACD;AACF;;AACD,SAAOT,MAAP;AACD","sourcesContent":["/**\n * Translates the list format produced by css-loader into something\n * easier to manipulate.\n */\nexport default function listToStyles (parentId, list) {\n  var styles = []\n  var newStyles = {}\n  for (var i = 0; i < list.length; i++) {\n    var item = list[i]\n    var id = item[0]\n    var css = item[1]\n    var media = item[2]\n    var sourceMap = item[3]\n    var part = {\n      id: parentId + ':' + i,\n      css: css,\n      media: media,\n      sourceMap: sourceMap\n    }\n    if (!newStyles[id]) {\n      styles.push(newStyles[id] = { id: id, parts: [part] })\n    } else {\n      newStyles[id].parts.push(part)\n    }\n  }\n  return styles\n}\n"]},"metadata":{},"sourceType":"module"}