{"ast":null,"code":"import rules from '../rule/';\nimport { isEmptyValue } from '../util';\n\nfunction date(rule, value, callback, source, options) {\n  // console.log('integer rule called %j', rule);\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field); // console.log('validate on %s value', value);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (!isEmptyValue(value)) {\n      var dateObject = void 0;\n\n      if (typeof value === 'number') {\n        dateObject = new Date(value);\n      } else {\n        dateObject = value;\n      }\n\n      rules.type(rule, dateObject, source, errors, options);\n\n      if (dateObject) {\n        rules.range(rule, dateObject.getTime(), source, errors, options);\n      }\n    }\n  }\n\n  callback(errors);\n}\n\nexport default date;","map":{"version":3,"sources":["/Users/kidsama/Documents/Full_Stack/SpringbootVueMS/frontend/node_modules/async-validator/es/validator/date.js"],"names":["rules","isEmptyValue","date","rule","value","callback","source","options","errors","validate","required","hasOwnProperty","field","dateObject","Date","type","range","getTime"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,SAASC,YAAT,QAA6B,SAA7B;;AAEA,SAASC,IAAT,CAAcC,IAAd,EAAoBC,KAApB,EAA2BC,QAA3B,EAAqCC,MAArC,EAA6CC,OAA7C,EAAsD;AACpD;AACA,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,QAAQ,GAAGN,IAAI,CAACO,QAAL,IAAiB,CAACP,IAAI,CAACO,QAAN,IAAkBJ,MAAM,CAACK,cAAP,CAAsBR,IAAI,CAACS,KAA3B,CAAlD,CAHoD,CAIpD;;AACA,MAAIH,QAAJ,EAAc;AACZ,QAAIR,YAAY,CAACG,KAAD,CAAZ,IAAuB,CAACD,IAAI,CAACO,QAAjC,EAA2C;AACzC,aAAOL,QAAQ,EAAf;AACD;;AACDL,IAAAA,KAAK,CAACU,QAAN,CAAeP,IAAf,EAAqBC,KAArB,EAA4BE,MAA5B,EAAoCE,MAApC,EAA4CD,OAA5C;;AACA,QAAI,CAACN,YAAY,CAACG,KAAD,CAAjB,EAA0B;AACxB,UAAIS,UAAU,GAAG,KAAK,CAAtB;;AAEA,UAAI,OAAOT,KAAP,KAAiB,QAArB,EAA+B;AAC7BS,QAAAA,UAAU,GAAG,IAAIC,IAAJ,CAASV,KAAT,CAAb;AACD,OAFD,MAEO;AACLS,QAAAA,UAAU,GAAGT,KAAb;AACD;;AAEDJ,MAAAA,KAAK,CAACe,IAAN,CAAWZ,IAAX,EAAiBU,UAAjB,EAA6BP,MAA7B,EAAqCE,MAArC,EAA6CD,OAA7C;;AACA,UAAIM,UAAJ,EAAgB;AACdb,QAAAA,KAAK,CAACgB,KAAN,CAAYb,IAAZ,EAAkBU,UAAU,CAACI,OAAX,EAAlB,EAAwCX,MAAxC,EAAgDE,MAAhD,EAAwDD,OAAxD;AACD;AACF;AACF;;AACDF,EAAAA,QAAQ,CAACG,MAAD,CAAR;AACD;;AAED,eAAeN,IAAf","sourcesContent":["import rules from '../rule/';\nimport { isEmptyValue } from '../util';\n\nfunction date(rule, value, callback, source, options) {\n  // console.log('integer rule called %j', rule);\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  // console.log('validate on %s value', value);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value)) {\n      var dateObject = void 0;\n\n      if (typeof value === 'number') {\n        dateObject = new Date(value);\n      } else {\n        dateObject = value;\n      }\n\n      rules.type(rule, dateObject, source, errors, options);\n      if (dateObject) {\n        rules.range(rule, dateObject.getTime(), source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n}\n\nexport default date;"]},"metadata":{},"sourceType":"module"}