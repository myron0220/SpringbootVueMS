{"ast":null,"code":"import \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.match.js\";\nimport _typeof from 'babel-runtime/helpers/typeof';\nimport * as util from '../util';\nimport required from './required';\n/* eslint max-len:0 */\n\nvar pattern = {\n  // http://emailregex.com/\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  url: new RegExp(\"^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$\", 'i'),\n  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i\n};\nvar types = {\n  integer: function integer(value) {\n    return types.number(value) && parseInt(value, 10) === value;\n  },\n  float: function float(value) {\n    return types.number(value) && !types.integer(value);\n  },\n  array: function array(value) {\n    return Array.isArray(value);\n  },\n  regexp: function regexp(value) {\n    if (value instanceof RegExp) {\n      return true;\n    }\n\n    try {\n      return !!new RegExp(value);\n    } catch (e) {\n      return false;\n    }\n  },\n  date: function date(value) {\n    return typeof value.getTime === 'function' && typeof value.getMonth === 'function' && typeof value.getYear === 'function';\n  },\n  number: function number(value) {\n    if (isNaN(value)) {\n      return false;\n    }\n\n    return typeof value === 'number';\n  },\n  object: function object(value) {\n    return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && !types.array(value);\n  },\n  method: function method(value) {\n    return typeof value === 'function';\n  },\n  email: function email(value) {\n    return typeof value === 'string' && !!value.match(pattern.email) && value.length < 255;\n  },\n  url: function url(value) {\n    return typeof value === 'string' && !!value.match(pattern.url);\n  },\n  hex: function hex(value) {\n    return typeof value === 'string' && !!value.match(pattern.hex);\n  }\n};\n/**\n *  Rule for validating the type of a value.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction type(rule, value, source, errors, options) {\n  if (rule.required && value === undefined) {\n    required(rule, value, source, errors, options);\n    return;\n  }\n\n  var custom = ['integer', 'float', 'array', 'regexp', 'object', 'method', 'email', 'number', 'date', 'url', 'hex'];\n  var ruleType = rule.type;\n\n  if (custom.indexOf(ruleType) > -1) {\n    if (!types[ruleType](value)) {\n      errors.push(util.format(options.messages.types[ruleType], rule.fullField, rule.type));\n    } // straight typeof check\n\n  } else if (ruleType && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== rule.type) {\n    errors.push(util.format(options.messages.types[ruleType], rule.fullField, rule.type));\n  }\n}\n\nexport default type;","map":{"version":3,"sources":["/Users/kidsama/Documents/Full_Stack/SpringbootVueMS/frontend/node_modules/async-validator/es/rule/type.js"],"names":["_typeof","util","required","pattern","email","url","RegExp","hex","types","integer","value","number","parseInt","float","array","Array","isArray","regexp","e","date","getTime","getMonth","getYear","isNaN","object","method","match","length","type","rule","source","errors","options","undefined","custom","ruleType","indexOf","push","format","messages","fullField"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,8BAApB;AACA,OAAO,KAAKC,IAAZ,MAAsB,SAAtB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA;;AAEA,IAAIC,OAAO,GAAG;AACZ;AACAC,EAAAA,KAAK,EAAE,wJAFK;AAGZC,EAAAA,GAAG,EAAE,IAAIC,MAAJ,CAAW,gZAAX,EAA6Z,GAA7Z,CAHO;AAIZC,EAAAA,GAAG,EAAE;AAJO,CAAd;AAOA,IAAIC,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AAC/B,WAAOF,KAAK,CAACG,MAAN,CAAaD,KAAb,KAAuBE,QAAQ,CAACF,KAAD,EAAQ,EAAR,CAAR,KAAwBA,KAAtD;AACD,GAHS;AAIVG,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeH,KAAf,EAAsB;AAC3B,WAAOF,KAAK,CAACG,MAAN,CAAaD,KAAb,KAAuB,CAACF,KAAK,CAACC,OAAN,CAAcC,KAAd,CAA/B;AACD,GANS;AAOVI,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeJ,KAAf,EAAsB;AAC3B,WAAOK,KAAK,CAACC,OAAN,CAAcN,KAAd,CAAP;AACD,GATS;AAUVO,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBP,KAAhB,EAAuB;AAC7B,QAAIA,KAAK,YAAYJ,MAArB,EAA6B;AAC3B,aAAO,IAAP;AACD;;AACD,QAAI;AACF,aAAO,CAAC,CAAC,IAAIA,MAAJ,CAAWI,KAAX,CAAT;AACD,KAFD,CAEE,OAAOQ,CAAP,EAAU;AACV,aAAO,KAAP;AACD;AACF,GAnBS;AAoBVC,EAAAA,IAAI,EAAE,SAASA,IAAT,CAAcT,KAAd,EAAqB;AACzB,WAAO,OAAOA,KAAK,CAACU,OAAb,KAAyB,UAAzB,IAAuC,OAAOV,KAAK,CAACW,QAAb,KAA0B,UAAjE,IAA+E,OAAOX,KAAK,CAACY,OAAb,KAAyB,UAA/G;AACD,GAtBS;AAuBVX,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBD,KAAhB,EAAuB;AAC7B,QAAIa,KAAK,CAACb,KAAD,CAAT,EAAkB;AAChB,aAAO,KAAP;AACD;;AACD,WAAO,OAAOA,KAAP,KAAiB,QAAxB;AACD,GA5BS;AA6BVc,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBd,KAAhB,EAAuB;AAC7B,WAAO,CAAC,OAAOA,KAAP,KAAiB,WAAjB,GAA+B,WAA/B,GAA6CV,OAAO,CAACU,KAAD,CAArD,MAAkE,QAAlE,IAA8E,CAACF,KAAK,CAACM,KAAN,CAAYJ,KAAZ,CAAtF;AACD,GA/BS;AAgCVe,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBf,KAAhB,EAAuB;AAC7B,WAAO,OAAOA,KAAP,KAAiB,UAAxB;AACD,GAlCS;AAmCVN,EAAAA,KAAK,EAAE,SAASA,KAAT,CAAeM,KAAf,EAAsB;AAC3B,WAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,CAAC,CAACA,KAAK,CAACgB,KAAN,CAAYvB,OAAO,CAACC,KAApB,CAA/B,IAA6DM,KAAK,CAACiB,MAAN,GAAe,GAAnF;AACD,GArCS;AAsCVtB,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAaK,KAAb,EAAoB;AACvB,WAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,CAAC,CAACA,KAAK,CAACgB,KAAN,CAAYvB,OAAO,CAACE,GAApB,CAAtC;AACD,GAxCS;AAyCVE,EAAAA,GAAG,EAAE,SAASA,GAAT,CAAaG,KAAb,EAAoB;AACvB,WAAO,OAAOA,KAAP,KAAiB,QAAjB,IAA6B,CAAC,CAACA,KAAK,CAACgB,KAAN,CAAYvB,OAAO,CAACI,GAApB,CAAtC;AACD;AA3CS,CAAZ;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASqB,IAAT,CAAcC,IAAd,EAAoBnB,KAApB,EAA2BoB,MAA3B,EAAmCC,MAAnC,EAA2CC,OAA3C,EAAoD;AAClD,MAAIH,IAAI,CAAC3B,QAAL,IAAiBQ,KAAK,KAAKuB,SAA/B,EAA0C;AACxC/B,IAAAA,QAAQ,CAAC2B,IAAD,EAAOnB,KAAP,EAAcoB,MAAd,EAAsBC,MAAtB,EAA8BC,OAA9B,CAAR;AACA;AACD;;AACD,MAAIE,MAAM,GAAG,CAAC,SAAD,EAAY,OAAZ,EAAqB,OAArB,EAA8B,QAA9B,EAAwC,QAAxC,EAAkD,QAAlD,EAA4D,OAA5D,EAAqE,QAArE,EAA+E,MAA/E,EAAuF,KAAvF,EAA8F,KAA9F,CAAb;AACA,MAAIC,QAAQ,GAAGN,IAAI,CAACD,IAApB;;AACA,MAAIM,MAAM,CAACE,OAAP,CAAeD,QAAf,IAA2B,CAAC,CAAhC,EAAmC;AACjC,QAAI,CAAC3B,KAAK,CAAC2B,QAAD,CAAL,CAAgBzB,KAAhB,CAAL,EAA6B;AAC3BqB,MAAAA,MAAM,CAACM,IAAP,CAAYpC,IAAI,CAACqC,MAAL,CAAYN,OAAO,CAACO,QAAR,CAAiB/B,KAAjB,CAAuB2B,QAAvB,CAAZ,EAA8CN,IAAI,CAACW,SAAnD,EAA8DX,IAAI,CAACD,IAAnE,CAAZ;AACD,KAHgC,CAIjC;;AACD,GALD,MAKO,IAAIO,QAAQ,IAAI,CAAC,OAAOzB,KAAP,KAAiB,WAAjB,GAA+B,WAA/B,GAA6CV,OAAO,CAACU,KAAD,CAArD,MAAkEmB,IAAI,CAACD,IAAvF,EAA6F;AAClGG,IAAAA,MAAM,CAACM,IAAP,CAAYpC,IAAI,CAACqC,MAAL,CAAYN,OAAO,CAACO,QAAR,CAAiB/B,KAAjB,CAAuB2B,QAAvB,CAAZ,EAA8CN,IAAI,CAACW,SAAnD,EAA8DX,IAAI,CAACD,IAAnE,CAAZ;AACD;AACF;;AAED,eAAeA,IAAf","sourcesContent":["import _typeof from 'babel-runtime/helpers/typeof';\nimport * as util from '../util';\nimport required from './required';\n\n/* eslint max-len:0 */\n\nvar pattern = {\n  // http://emailregex.com/\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/,\n  url: new RegExp('^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-?)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$', 'i'),\n  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i\n};\n\nvar types = {\n  integer: function integer(value) {\n    return types.number(value) && parseInt(value, 10) === value;\n  },\n  float: function float(value) {\n    return types.number(value) && !types.integer(value);\n  },\n  array: function array(value) {\n    return Array.isArray(value);\n  },\n  regexp: function regexp(value) {\n    if (value instanceof RegExp) {\n      return true;\n    }\n    try {\n      return !!new RegExp(value);\n    } catch (e) {\n      return false;\n    }\n  },\n  date: function date(value) {\n    return typeof value.getTime === 'function' && typeof value.getMonth === 'function' && typeof value.getYear === 'function';\n  },\n  number: function number(value) {\n    if (isNaN(value)) {\n      return false;\n    }\n    return typeof value === 'number';\n  },\n  object: function object(value) {\n    return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && !types.array(value);\n  },\n  method: function method(value) {\n    return typeof value === 'function';\n  },\n  email: function email(value) {\n    return typeof value === 'string' && !!value.match(pattern.email) && value.length < 255;\n  },\n  url: function url(value) {\n    return typeof value === 'string' && !!value.match(pattern.url);\n  },\n  hex: function hex(value) {\n    return typeof value === 'string' && !!value.match(pattern.hex);\n  }\n};\n\n/**\n *  Rule for validating the type of a value.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction type(rule, value, source, errors, options) {\n  if (rule.required && value === undefined) {\n    required(rule, value, source, errors, options);\n    return;\n  }\n  var custom = ['integer', 'float', 'array', 'regexp', 'object', 'method', 'email', 'number', 'date', 'url', 'hex'];\n  var ruleType = rule.type;\n  if (custom.indexOf(ruleType) > -1) {\n    if (!types[ruleType](value)) {\n      errors.push(util.format(options.messages.types[ruleType], rule.fullField, rule.type));\n    }\n    // straight typeof check\n  } else if (ruleType && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) !== rule.type) {\n    errors.push(util.format(options.messages.types[ruleType], rule.fullField, rule.type));\n  }\n}\n\nexport default type;"]},"metadata":{},"sourceType":"module"}