{"ast":null,"code":"import { isEmptyValue } from '../util';\nimport rules from '../rule/';\n/**\n *  Validates a boolean.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\n\nfunction boolean(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n\n    rules.required(rule, value, source, errors, options);\n\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n\n  callback(errors);\n}\n\nexport default boolean;","map":{"version":3,"sources":["/Users/kidsama/Documents/Full_Stack/SpringbootVueMS/frontend/node_modules/async-validator/es/validator/boolean.js"],"names":["isEmptyValue","rules","boolean","rule","value","callback","source","options","errors","validate","required","hasOwnProperty","field","undefined","type"],"mappings":"AAAA,SAASA,YAAT,QAA6B,SAA7B;AACA,OAAOC,KAAP,MAAkB,UAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,OAAT,CAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,QAA9B,EAAwCC,MAAxC,EAAgDC,OAAhD,EAAyD;AACvD,MAAIC,MAAM,GAAG,EAAb;AACA,MAAIC,QAAQ,GAAGN,IAAI,CAACO,QAAL,IAAiB,CAACP,IAAI,CAACO,QAAN,IAAkBJ,MAAM,CAACK,cAAP,CAAsBR,IAAI,CAACS,KAA3B,CAAlD;;AACA,MAAIH,QAAJ,EAAc;AACZ,QAAIT,YAAY,CAACI,KAAD,CAAZ,IAAuB,CAACD,IAAI,CAACO,QAAjC,EAA2C;AACzC,aAAOL,QAAQ,EAAf;AACD;;AACDJ,IAAAA,KAAK,CAACS,QAAN,CAAeP,IAAf,EAAqBC,KAArB,EAA4BE,MAA5B,EAAoCE,MAApC,EAA4CD,OAA5C;;AACA,QAAIH,KAAK,KAAKS,SAAd,EAAyB;AACvBZ,MAAAA,KAAK,CAACa,IAAN,CAAWX,IAAX,EAAiBC,KAAjB,EAAwBE,MAAxB,EAAgCE,MAAhC,EAAwCD,OAAxC;AACD;AACF;;AACDF,EAAAA,QAAQ,CAACG,MAAD,CAAR;AACD;;AAED,eAAeN,OAAf","sourcesContent":["import { isEmptyValue } from '../util';\nimport rules from '../rule/';\n\n/**\n *  Validates a boolean.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param callback The callback function.\n *  @param source The source object being validated.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nfunction boolean(rule, value, callback, source, options) {\n  var errors = [];\n  var validate = rule.required || !rule.required && source.hasOwnProperty(rule.field);\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n}\n\nexport default boolean;"]},"metadata":{},"sourceType":"module"}